name: "mnist_siamese_train_test"
layers {
  name: "pair_data"
  type: DATA
  top: "pair_data"
  top: "rot_label"
  data_param {
source: "/data1/pulkitag/mnist_rotation/leveldb_store/mnist_rotation_train_2_4_6_7_8_9_100K_leveldb"    scale: 0.00390625
    batch_size: 64
  }
  include: { phase: TRAIN }
}
layers {
  name: "pair_data"
  type: DATA
  top: "pair_data"
  top: "rot_label"
  data_param {
source: "/data1/pulkitag/mnist_rotation/leveldb_store/mnist_rotation_val_0_1_3_5_10K_leveldb"    scale: 0.00390625
    batch_size: 100
  }
  include: { phase: TEST }
}
layers {
    name: "slice_pair"
    type: SLICE
    bottom: "pair_data"
    top: "data"
    top: "data_p"
    slice_param {
        slice_dim: 1
        slice_point: 1
    }
}

layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  param: "conv1_w"
  param: "conv1_b"
}
layers {
  name: "pool1"
  type: POOLING
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "pool1"
  top: "conv2"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  param: "conv2_w"
  param: "conv2_b"
}
layers {
  name: "pool2"
  type: POOLING
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "ip1"
  type: INNER_PRODUCT
  bottom: "pool2"
  top: "ip1"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  param: "ip1_w"
  param: "ip1_b"
}
layers {
  name: "relu1"
  type: RELU
  bottom: "ip1"
  top: "ip1"
}
layers {
  name: "ip2"
  type: INNER_PRODUCT
  bottom: "ip1"
  top: "ip2"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  param: "ip2_w"
  param: "ip2_b"
}
layers {
  name: "relu2"
  type: RELU
  bottom: "ip2"
  top: "ip2"
}
layers {
  name: "conv1_p"
  type: CONVOLUTION
  bottom: "data_p"
  top: "conv1_p"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  param: "conv1_w"
  param: "conv1_b"
}
layers {
  name: "pool1_p"
  type: POOLING
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "conv2_p"
  type: CONVOLUTION
  bottom: "pool1_p"
  top: "conv2_p"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  param: "conv2_w"
  param: "conv2_b"
}
layers {
  name: "pool2_p"
  type: POOLING
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "ip1_p"
  type: INNER_PRODUCT
  bottom: "pool2_p"
  top: "ip1_p"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  param: "ip1_w"
  param: "ip1_b"
}
layers {
  name: "relu1_p"
  type: RELU
  bottom: "ip1_p"
  top: "ip1_p"
}
layers {
  name: "ip2_p"
  type: INNER_PRODUCT
  bottom: "ip1_p"
  top: "ip2_p"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
  param: "ip2_w"
  param: "ip2_b"
}
layers {
  name: "relu2_p"
  type: RELU
  bottom: "ip2_p"
  top: "ip2_p"
}

layers {
	name: "concat"
	type: CONCAT
	concat_param{
		concat_dim: 1
	}
	bottom: "ip2"
	bottom: "ip2_p"
	top   : "concat"
}

layers {
  name: "feat1"
  type: INNER_PRODUCT
  bottom: "concat"
  top: "feat1"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu_feat"
  type: RELU
  bottom: "feat1"
  top: "feat1"
}
layers {
  name: "feat2"
  type: INNER_PRODUCT
  bottom: "feat1"
  top: "feat2"
  blobs_lr: 1
  blobs_lr: 2
  inner_product_param {
    num_output: 20
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "feat2"
  bottom: "rot_label"
  top: "accuracy"
  include: {phase: TEST}
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "feat2"
  bottom: "rot_label"
  top: "loss"
}

