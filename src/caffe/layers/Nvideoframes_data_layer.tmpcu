#include <vector>

#include "caffe/data_layers.hpp"

namespace caffe {

template <typename Dtype>
void NvideoframesDataLayer<Dtype>::Forward_gpu(
    const vector<Blob<Dtype>*>& bottom, const vector<Blob<Dtype>*>& top) {
	//this->JoinPrefetchThread();
	caffe_copy(prefetch_data_.count(), prefetch_data_.cpu_data(),
	top[0]->mutable_gpu_data());
	caffe_copy(prefetch_cont_.count(), prefetch_cont_.cpu_data(),
	top[1]->mutable_gpu_data());
	caffe_copy(prefetch_target_.count(), prefetch_target_.cpu_data(),
	top[2]->mutable_gpu_data());

	caffe_copy(prefetch_lossweights_.count(), prefetch_lossweights_.cpu_data(),
	top[3]->mutable_gpu_data());

	caffe_copy(prefetch_idtracks_.count(), prefetch_idtracks_.cpu_data(),
	top[4]->mutable_gpu_data());

	caffe_copy(prefetch_iminds_.count(), prefetch_iminds_.cpu_data(),
	top[5]->mutable_gpu_data());

	caffe_copy(prefetch_force_.count(), prefetch_force_.cpu_data(),
	top[6]->mutable_gpu_data());
	//LOG(INFO) << "COPYGPUprefetch_si_.count():" << prefetch_si_.count();


	//LOG(INFO) << "COPYGPUprefetch_END:" ;
	// Start a new prefetch thread
	//this->CreatePrefetchThread();
}


INSTANTIATE_LAYER_GPU_FORWARD(NvideoframesDataLayer);

}  // namespace caffe



  
